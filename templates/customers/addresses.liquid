<!-- /templates/customers/addresses.liquid -->
<section>
    <div class="page-header">
        <div class="container">
            <div class="cloud-1">
                <img src="{{"cloud-1.svg" | asset_url}}" alt="">
            </div>
            <div class="cloud-2">
                <img src="{{"cloud-1.svg" | asset_url}}" alt="">
            </div>
            <div class="cloud-3">
                <img src="{{"cloud-1.svg" | asset_url}}" alt="">
            </div>
            <div class="cloud-4">
                <img src="{{"cloud-1.svg" | asset_url}}" alt="">
            </div>
            <h2 class="title-en">Address</h2>
            <h3 class="title-jp">住所</h3>
        </div>
        <div class="bg-anim-1"></div>
        <div class="bg-anim-2"></div>
        <div class="bg-anim-3"></div>
    </div>
</section>
<section id="home-contact" class="login">
    <div class="login-wrap">
        <div class="container">
            <div class="box-login">
          
                <h2>新しいアドレス</h2>
                {% form 'customer_address', customer.new_address %}
                
                    {{ form.errors | default_errors }}
                    
                        <div class=" form-group">
                            <label class="input-label" for="first_name">名</label>
                            <input type="text"  class="form-control" value="" name="address[first_name]" size="30" />
                        </div>
                        
                        <div class=" form-group">
                            <label class="input-label" for="last_name">姓</label>
                            <input type="text"  class="form-control" value="" name="address[last_name]" size="30" />
                        </div>

                        <div class=" form-group">
                            <label class="input-label" for="phone">電話番号</label>
                            <input type="tel"  class="form-control"  value="" name="address[phone]" />
                        </div>
                        <div class="form-group">
                            <label class="input-label" for="country">国</label>
                            <select
                                id="AddressCountry_{{ form.id }}"
                                name="address[country]"
                                data-address-country-select
                                data-default="{{ form.country }}"
                                data-form-id="{{ form.id }}"
                                autocomplete="country"
                                class="form-control"
                            >
                                {{ all_country_option_tags }}
                            </select>
                        </div>

                        <div class=" form-group">
                            <label class="input-label" for="zip">郵便番号</label>
                            <input type="text"  class="form-control" value="" name="address[zip]" />
                        </div>

                        <div class="form-group select">
                            <label class="input-label" for="province">都道府県</label>
                            <select name="address[province]" 
                                class="form-control"
                                data-default="{{ form.province }}"    
                                autocomplete="address-level1"    >
                            </select>
                        </div>
                        <div class=" form-group">
                            <label class="input-label" for="city">市区町村</label>
                            <input type="text"  class="form-control" value="" name="address[city]" />
                        </div>
                        <div class=" form-group">
                            <label class="input-label" for="address1">住所</label>
                            <input type="text"  class="form-control" value="" name="address[address1]" />
                        </div>

                        <!--<div class=" form-group">
                            <label class="input-label" for="address2">建物名部、屋番号など</label>
                            <input type="text"  class="form-control value="" name="address[address2]" />
                        </div>-->

                        <div class=" form-group">
                            <label class="input-label" for="company">会社名</label>
                            <input type="text"  class="form-control" value="" name="address[company]" />
                        </div>


                        <button type="submit" class="btn btn-block mb-2">住所を追加する</button>                    
                {% endform %}
  
            </div>
            <a class="btn btn-main" href="/account" style="margin-top:50px">アカウントページへ戻る</a>
        </div>
        
  
  <style>
  select{
    width:100%;height:48px;
  }
    .login-wrap {
        padding: 40px 0px 120px;
        background-color: white;
        position: relative;
    }
  
    .box-login {
        background: #fff;
        width: 540px;
        max-width: 100%;
        padding: 24px;
        margin: 0 auto;
        border-radius: 5px;
        box-shadow: 0 3px 4px rgba(153,155,168,.25);
        font-size: 14px;
        color: #25324B;
    }
  
   
  
    .box-login .welcome {
        font-size: 28px;
        font-weight: 700;
    }
  
    .box-login .note {
        color: #7C8493;
    }
  
    .form-group {
        margin-bottom: 1rem;
    }
  
    .input-label class="input-label" {
        font-size: 14px;
        font-weight: 500;
        line-height: 1.19;
        color: #171347;
    }
  
    .box-login input.form-control, .box-login .btn {
        height: 48px !important;
        border-radius: 0;
        border: 1px solid #D6DDEB;
        background-color: #FAFBFC;
        box-shadow: none;
        display: block;
        font-size: 14px;
    }
  
    .box-login .btn:hover {
        background-color: #E0C143 !important;
        border-color: #E0C143 !important;
    }
</style>


<script>

    class CustomerAddresses {

        constructor() {
          this.add_new = document.querySelector('.add-address');
          this.edit_addresses = document.querySelectorAll('.edit-address-button');
          this.delete_addresses = document.querySelectorAll('.delete-address-button');
          // Add functionality to buttons
          this.add_new.addEventListener('click', (e) => this.toggle_addnew(e));
          this.edit_addresses.forEach((edit_address) => {
            this.edit_address(edit_address);
          });
          this.delete_addresses.forEach((delete_address) => {
            this.delete_address(delete_address);
          });
          this.setupCountries();
        }
      
        toggle_addnew(e) {
          e.preventDefault();
          let add_new_sidepanel = document.querySelector('#Side-Panel-Add-Address');
      
          document.getElementsByTagName("body")[0].classList.add('open-cc');
      
          add_new_sidepanel.classList.add('active');
        }
        edit_address(edit_address) {
          let _this = this,
            button = edit_address,
            target = button.closest('.my-address').querySelector('#' + button.dataset.controls);
      
          button.addEventListener('click', (e) => {
            e.preventDefault();
            document.getElementsByTagName("body")[0].classList.add('open-cc');
            target.classList.add('active');
          });
        }
        delete_address(delete_address) {
          delete_address.addEventListener('click', (e) => {
            // eslint-disable-next-line no-alert
            if (confirm(e.target.getAttribute('data-confirm-message'))) {
              Shopify.postLink(e.target.getAttribute('data-target'), {
                parameters: {
                  _method: 'delete'
                },
              });
            }
          });
        }
        setupCountries() {
          if (Shopify && Shopify.CountryProvinceSelector) {
      
            document.querySelectorAll('[data-address-country-select]').forEach((select) => {
              const formId = select.dataset.formId;
              // eslint-disable-next-line no-new
              new Shopify.CountryProvinceSelector(`AddressCountry_${formId}`, `AddressProvince_${formId}`, {
                hideElement: `AddressProvinceContainer_${formId}`
              });
            });
      
            // eslint-disable-next-line no-new
            new Shopify.CountryProvinceSelector('AddressCountryNew', 'AddressProvinceNew', {
              hideElement: 'AddressProvinceContainerNew'
            });
          }
        }
      }
      window.addEventListener('load', () => {
        if (typeof CustomerAddresses !== 'undefined') {
          new CustomerAddresses();
        }
      });
</script>